package com.github.mittyrobotics.motion.profiles

import com.github.mittyrobotics.motion.State

/**
 * Motion profiles are graphs of [State]s over time. They are used to modulate the setpoint of a controller in order to
 * satisfy a set of constraints, such as a mechanism's maximum velocity and acceleration.
 */
public abstract class MotionProfile {
    /**
     * Calculates the next [State] given a change in time since the last call to [next]
     *
     * @param dt delta time since last call to [next]
     */
    public abstract fun next(dt: Double): State
}

/**
 * Dynamic motion profiles can be calculated at any time in any order. [State]s are generated by inputting either an
 * absolute time value to [getStateAtTime] or a change in time since the last call to the [next] function.
 */
public abstract class DynamicMotionProfile: MotionProfile()  {
    /**
     * Calculates the [State] given an absolute time value
     *
     * @param t absolute time value to get the state
     */
    public abstract fun getStateAtTime(t: Double): State

    private var elapsedTime = 0.0

    /**
     * Calculates the next [State] given a change in time since the last call to [next]
     *
     * @param dt delta time since last call to [next]
     */
    public override fun next(dt: Double): State = State(elapsedTime+dt).also { elapsedTime += dt }
}

/**
 * Generative motion profiles require previous parts of the motion profile to be generated before future parts. States
 * are generated by inputting a delta time since the last call to the [next] function.
 */
public abstract class GenerativeMotionProfile: MotionProfile() {
    /**
     * Calculates the next [State] given a change in time since the last call to [next]
     *
     * @param dt delta time since last call to [next]
     */
    public abstract override fun next(dt: Double): State
}